工厂模式：
  通过让子类决定该创建的对象，来达到将对象创建的过程封装的目的。所有工厂模式都用来封装对象的创建。
单例模式：
  确保一个类只有一个实例，并提供一个全局访问点。
观察者模式：
  对象之间定义一对多的依赖，当一个对象改变时，依赖他的对象就会收到通知并自动更新。
装饰者模式：
  动态的将属性附加到对象上，可以扩展功能，不同于继承的一种实现方式。
适配器模式：
  将一个类的接口，转换成另一个类的接口，让原本不兼容的类可以相互调用。
模板方法模式：
  在一个方法中定义模板，将一些步骤放到子类中去实现。模板方法使得子类可以在不改变算法结构的情况下，重新定义算法中的一些步骤。
代理模式：
  通过一层代理类去访问一个对象。
